{"version":3,"sources":["webpack:///./src/components/page-metadata.js","webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/components/button.js","webpack:///./src/components/blog-post-preview-item.js","webpack:///./src/components/pagination/paginationLink.js","webpack:///./src/components/pagination/index.js","webpack:///./src/templates/template-blog-list.js"],"names":["PageMetadata","title","description","type","image","twitterCard","timeToRead","children","siteUrl","site","siteMetadata","Helmet","property","content","name","src","width","height","components","link","Link","href","rest","button","Button","to","overrideCSS","icon","tag","secondary","tracking","variant","Tag","props","undefined","onClick","e","redirect","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","target","toLowerCase","window","ga","eventCategory","eventAction","eventLabel","transport","sx","buttonStyles","default","Fragment","position","display","alignItems","top","left","right","bottom","overflow","textIndent","whiteSpace","zIndex","border","BlogPostPreviewItem","dateString","post","className","fields","slug","color","mt","fontFamily","frontmatter","float","date","Date","toLocaleDateString","timeZone","month","day","year","excerpt","PaginationLink","Pagination","changePage","navigate","value","render","this","context","numPages","currentPage","isFirst","isLast","prevPageNum","toString","nextPageNum","prevPageLink","nextPageLink","prevNextLinkStyles","borderBottom","justifyContent","margin","t","space","p","flexDirection","fontSize","mediaQueries","md","background","borderTop","marginBottom","paddingTop","padding","mb","aria-label","onChange","appearance","fontWeight","Array","from","length","_","i","key","aria-current","viewBox","fill","pointerEvents","d","fillRule","React","Component","BlogPostsIndex","allMdx","data","edges","location","id","pageContext","pullIntoGutter","colors","ui","pb","breakpointGutter","map","index","node","borderBottomWidth","borderBottomStyle","borderColor","boxShadow","bg","borderRadius","mx","transition","transform","marginLeft","marginRight","pageQuery"],"mappings":"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","file":"component---src-templates-template-blog-list-js-715c83f7d7708bf729e0.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\n\r\n/**\r\n * Component representing common metadata of a page.\r\n *\r\n * Different crawlers such as Twitter Cards and Facebook's Open Graph Protocol (OGP)\r\n * use different meta tags to annotate web pages for things like smart previews.\r\n * This component abstracts out the specific meta tags and attributes necessary and defines\r\n * valid properties that can be attached to metadata for Gatsby site pages.\r\n *\r\n * Props:\r\n *\r\n * @param title The title of the page used in the `<title>` tag.\r\n * @param description A longer description of the page, used in the \"description\" tag\r\n * as well as OGP.\r\n *\r\n * @param type The type of the page, used by OGP: https://ogp.me/#types\r\n *\r\n * @param image An image to be attached to the Facebook preview and Twitter Card. Consists of:\r\n *\r\n *  - `src` the source the image\r\n *  - `width` the width of the image\r\n *  - `height` the height of the image\r\n *\r\n * @param twitterCard The Twitter card type, which will be one of\r\n * “summary”, “summary_large_image”, “app”, or “player”.\r\n *\r\n * @param timeToRead The amount of time it takes to read the article, in minutes.\r\n * Used by Slack rich previews:\r\n * https://api.slack.com/legacy/message-link-unfurling#classic_unfurling\r\n *\r\n * @param children You can specify additional meta properties or override them by\r\n * adding children to this component. For example:\r\n *\r\n * ```\r\n * <PageMetadata>\r\n *   <meta name=\"author\" content={author.id} />\r\n * </PageMetadata>\r\n * ```\r\n *\r\n * Additional References:\r\n *\r\n *  - Open Graph Protocol: https://ogp.me/\r\n *  - Facebook Sharing Debugger: https://developers.facebook.com/tools/debug/\r\n *  - Twitter Card Docs: https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/markup\r\n *  - Twitter Card validator: https://cards-dev.twitter.com/validator\r\n */\r\nexport default function PageMetadata({\r\n  title,\r\n  description,\r\n  type,\r\n  image,\r\n  twitterCard,\r\n  timeToRead,\r\n  children,\r\n}) {\r\n  const { siteUrl } = useSiteMetadata()\r\n  // <Helmet> doesn't support JSX fragments so we can't bundle the tags based on\r\n  // the property they match up with\r\n\r\n  return (\r\n    <Helmet>\r\n      {title && <title>{title}</title>}\r\n      {title && <meta property=\"og:title\" content={title} />}\r\n      {description && <meta name=\"description\" content={description} />}\r\n      {description && <meta property=\"og:description\" content={description} />}\r\n      {type && <meta property=\"og:type\" content={type} />}\r\n      {twitterCard && <meta name=\"twitter:card\" content={twitterCard} />}\r\n      {timeToRead && <meta name=\"twitter:label1\" content=\"Reading time\" />}\r\n      {timeToRead && (\r\n        <meta name=\"twitter:data1\" content={`${timeToRead} min read`} />\r\n      )}\r\n      {image && <meta property=\"og:image\" content={`${siteUrl}${image.src}`} />}\r\n      {image?.width && <meta property=\"og:image:width\" content={image.width} />}\r\n      {image?.height && (\r\n        <meta property=\"og:image:height\" content={image.height} />\r\n      )}\r\n      {children}\r\n    </Helmet>\r\n  )\r\n}\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport default function useSiteMetadata() {\r\n  const { site } = useStaticQuery(graphql`\r\n    query SiteMetadata {\r\n      site {\r\n        siteMetadata {\r\n          siteUrl\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return site.siteMetadata\r\n}\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport React from \"react\"\r\nimport Link from \"./localized-link\"\r\n\r\nimport { buttonStyles } from \"../utils/styles\"\r\n\r\nconst components = {\r\n  link: Link,\r\n  href: ({ children, ...rest }) => <a {...rest}>{children}</a>,\r\n  button: ({ children, ...rest }) => <button {...rest}>{children}</button>,\r\n}\r\n\r\nconst Button = ({\r\n  to,\r\n  overrideCSS,\r\n  icon,\r\n  children,\r\n  tag,\r\n  secondary,\r\n  tracking,\r\n  variant,\r\n  ...rest\r\n}) => {\r\n  const Tag = components[tag || `link`]\r\n\r\n  const props = {\r\n    to: !tag ? to : undefined,\r\n    href: tag === `href` ? to : undefined,\r\n    ...rest,\r\n  }\r\n\r\n  const trackingOnClick = e => {\r\n    if (typeof props.onClick === `function`) {\r\n      props.onClick(e)\r\n    }\r\n\r\n    let redirect = true\r\n\r\n    // Slightly modified logic from the gatsby-plugin-google-analytics\r\n    // But this one should work with `Link` component as well\r\n    if (\r\n      e.button !== 0 ||\r\n      e.altKey ||\r\n      e.ctrlKey ||\r\n      e.metaKey ||\r\n      e.shiftKey ||\r\n      e.defaultPrevented\r\n    ) {\r\n      redirect = false\r\n    }\r\n\r\n    if (props.target && props.target.toLowerCase() !== `_self`) {\r\n      redirect = false\r\n    }\r\n\r\n    if (tracking && window.ga) {\r\n      window.ga(`send`, `event`, {\r\n        eventCategory: `Outbound Link`,\r\n        eventAction: `click`,\r\n        eventLabel: `${tracking} - ${props.to || props.href}`,\r\n        transport: redirect ? `beacon` : ``,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      {...props}\r\n      onClick={trackingOnClick}\r\n      sx={{\r\n        \"&&\": {\r\n          ...buttonStyles().default,\r\n          ...(secondary && buttonStyles().secondary),\r\n          variant: `buttons.${variant}`,\r\n          ...overrideCSS,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n      {icon && <React.Fragment>{icon}</React.Fragment>}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Link from \"./localized-link\"\r\n\r\nconst formatDate = dateString =>\r\n  new Date(dateString).toLocaleDateString(`en-EN`, {\r\n    timeZone: `UTC`,\r\n    month: `long`,\r\n    day: `numeric`,\r\n    year: `numeric`,\r\n  })\r\n\r\nconst BlogPostPreviewItem = ({ post, className }) => (\r\n  <article css={{ position: `relative` }} className={className}>\r\n    <Link to={post.fields.slug} sx={{ \"&&\": { color: `card.color` } }}>\r\n      <h2 sx={{ \r\n        color: `card.header`,\r\n        mt: 0,\r\n        display: `inline-block`,\r\n        fontFamily: 'noto serif sc',\r\n      }}>\r\n        {post.frontmatter.title}\r\n      </h2>\r\n      <span sx={{\r\n        float: `right`,\r\n        fontFamily: `'Dancing Script', cursive;`,\r\n      }}>\r\n        {formatDate(post.frontmatter.date)}\r\n      </span>\r\n      <p>{post.fields.excerpt}</p>\r\n    </Link>\r\n    <div\r\n      css={{\r\n        display: `flex`,\r\n        alignItems: `center`,\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          display: `inline-block`,\r\n          fontFamily: `heading`,\r\n          color: `card.color`,\r\n        }}\r\n      >\r\n      </div>\r\n    </div>\r\n    <Link\r\n      to={post.fields.slug}\r\n      css={{\r\n        position: `absolute`,\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        overflow: `hidden`,\r\n        textIndent: `-100%`,\r\n        whiteSpace: `nowrap`,\r\n        zIndex: 0,\r\n        \"&&\": { border: 0 },\r\n      }}\r\n    >\r\n      Read more\r\n    </Link>\r\n  </article>\r\n)\r\n\r\nexport default BlogPostPreviewItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Link from \"../localized-link\"\r\n\r\nconst PaginationLink = ({ to, children, ...props }) => {\r\n  if (to) {\r\n    return (\r\n      <Link to={to} {...props}>\r\n        {children}\r\n      </Link>\r\n    )\r\n  }\r\n  return <span sx={{ color: `textMuted` }}>{children}</span>\r\n}\r\n\r\nexport default PaginationLink\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport React from \"react\"\r\nimport { navigate } from \"gatsby\"\r\nimport {\r\n  MdArrowForward as ArrowForwardIcon,\r\n  MdArrowBack as ArrowBackIcon,\r\n} from \"react-icons/md\"\r\nimport PaginationLink from \"./paginationLink\"\r\nimport { mediaQueries } from \"gatsby-design-tokens/dist/theme-gatsbyjs-org\"\r\n\r\nclass Pagination extends React.Component {\r\n  changePage = e => {\r\n    navigate(e.target.value ? `/blog/page/${e.target.value}` : `/blog/`)\r\n  }\r\n  render() {\r\n    const { numPages, currentPage } = this.props.context\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPageNum =\r\n      currentPage - 1 === 1 ? `` : `page/${(currentPage - 1).toString()}`\r\n    const nextPageNum = (currentPage + 1).toString()\r\n    const prevPageLink = isFirst ? null : `/blog/${prevPageNum}`\r\n    const nextPageLink = isLast ? null : `/blog/page/${nextPageNum}`\r\n\r\n    const prevNextLinkStyles = {\r\n      \"&&\": {\r\n        borderBottom: 0,\r\n        color: `gatsby`,\r\n      },\r\n    }\r\n\r\n    return (\r\n      <div\r\n        sx={{\r\n          display: `flex`,\r\n          justifyContent: `space-between`,\r\n          margin: t => `0 -${t.space[6]}`,\r\n          p: 6,\r\n          flexDirection: `column`,\r\n          fontSize: 1,\r\n          [mediaQueries.md]: {\r\n            background: `transparent`,\r\n            borderTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            flexDirection: `row`,\r\n          },\r\n        }}\r\n      >\r\n        <div\r\n          sx={{\r\n            display: `flex`,\r\n            margin: `0`,\r\n            padding: `0`,\r\n            justifyContent: `space-between`,\r\n            alignItems: `center`,\r\n            mb: 3,\r\n            [mediaQueries.md]: {\r\n              width: `15rem`,\r\n              mb: 0,\r\n            },\r\n          }}\r\n        >\r\n          <PaginationLink to={prevPageLink} sx={prevNextLinkStyles}>\r\n            <ArrowBackIcon />\r\n            Newer posts\r\n          </PaginationLink>\r\n          <PaginationLink to={nextPageLink} sx={prevNextLinkStyles}>\r\n            Older posts\r\n            <ArrowForwardIcon />\r\n          </PaginationLink>\r\n        </div>\r\n        <div\r\n          sx={{\r\n            display: `flex`,\r\n            alignItems: `center`,\r\n            justifyContent: `flex-end`,\r\n            fontSize: 1,\r\n          }}\r\n        >\r\n          <span>Showing page &nbsp;</span>\r\n          <select\r\n            aria-label=\"Pagination Dropdown\"\r\n            value={currentPage === 1 ? `` : currentPage.toString()}\r\n            onChange={this.changePage}\r\n            sx={{\r\n              appearance: `none`,\r\n              border: `none`,\r\n              padding: `0.5ch 2ch 0.5ch 0.5ch`,\r\n              color: `gatsby`,\r\n              fontWeight: `bold`,\r\n            }}\r\n          >\r\n            {Array.from({ length: numPages }, (_, i) => (\r\n              <option\r\n                value={`${i === 0 ? `` : i + 1}`}\r\n                key={`pagination-number${i + 1}`}\r\n                aria-label={`Goto Page ${i + 1}`}\r\n                aria-current={currentPage === i + 1}\r\n              >\r\n                {i + 1}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <svg\r\n            width=\"10\"\r\n            height=\"5\"\r\n            viewBox=\"0 0 10 5\"\r\n            sx={{\r\n              position: `relative`,\r\n              right: 4,\r\n              fill: `gatsby`,\r\n              pointerEvents: `none`,\r\n            }}\r\n          >\r\n            <path d=\"M0 0l5 4.998L10 0z\" fillRule=\"evenodd\" />\r\n          </svg>\r\n          <span>of &nbsp;</span>\r\n          <span>{numPages}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { TiTags as TagsIcon } from \"react-icons/ti\"\r\nimport { mediaQueries } from \"gatsby-design-tokens/dist/theme-gatsbyjs-org\"\r\nimport { pullIntoGutter, breakpointGutter } from \"../utils/styles\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Button from \"../components/button\"\r\nimport Container from \"../components/container\"\r\nimport BlogPostPreviewItem from \"../components/blog-post-preview-item\"\r\nimport Pagination from \"../components/pagination\"\r\nimport PageMetadata from \"../components/page-metadata\"\r\n\r\nclass BlogPostsIndex extends React.Component {\r\n  render() {\r\n    const { edges: allMdx } = this.props.data.allMdx\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <main id={`reach-skip-nav`}>\r\n          <PageMetadata\r\n            title={`Blog | Page ${this.props.pageContext.currentPage}`}\r\n          />\r\n          <Container>\r\n            <div\r\n              sx={{\r\n                ...pullIntoGutter,\r\n                display: `flex`,\r\n                justifyContent: `space-between`,\r\n                borderBottom: t => `1px solid ${t.colors.ui.border}`,\r\n                mb: 6,\r\n                pb: 6,\r\n                [breakpointGutter]: {\r\n                  pb: 0,\r\n                  border: 0,\r\n                },\r\n              }}\r\n            >\r\n              <h1 sx={{ \r\n                mb: 0,\r\n                fontFamily: 'Dancing Script',\r\n              }}>\r\n                Blog\r\n              </h1>\r\n              <Button\r\n                key=\"blog-view-all-tags-button\"\r\n                to=\"/blog\"\r\n                variant=\"small\"\r\n              >\r\n                Tags(TODO) <TagsIcon />\r\n              </Button>\r\n            </div>\r\n            {allMdx.map(({ node }, index) => (\r\n              <BlogPostPreviewItem\r\n                post={node}\r\n                key={node.fields.slug}\r\n                sx={{\r\n                  borderBottomWidth: `1px`,\r\n                  borderBottomStyle: `solid`,\r\n                  borderColor: `ui.border`,\r\n                  pb: 8,\r\n                  mb: index === allMdx.length - 1 ? 0 : 8,\r\n                  ...pullIntoGutter,\r\n                  [breakpointGutter]: {\r\n                    p: 9,\r\n                    boxShadow: `raised`,\r\n                    bg: `card.background`,\r\n                    borderRadius: 2,\r\n                    border: 0,\r\n                    mb: 6,\r\n                    mx: 0,\r\n                    transition: t =>\r\n                      `transform ${t.transition.default},  box-shadow ${t.transition.default}, padding ${t.transition.default}`,\r\n                    \"&:hover\": {\r\n                      transform: t => `translateY(-${t.space[1]})`,\r\n                      boxShadow: `overlay`,\r\n                    },\r\n                    \"&:active\": {\r\n                      boxShadow: `cardActive`,\r\n                      transform: `translateY(0)`,\r\n                    },\r\n                  },\r\n                  [mediaQueries.md]: {\r\n                    marginLeft: t => `-${t.space[9]}`,\r\n                    marginRight: t => `-${t.space[9]}`,\r\n                  },\r\n                }}\r\n              />\r\n            ))}\r\n            <Pagination context={this.props.pageContext} />\r\n          </Container>\r\n        </main>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostsIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allMdx(\r\n      sort: { order: DESC, fields: [frontmatter___date, fields___slug] }\r\n      filter: { fields: { released: { eq: true } } }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            excerpt\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}